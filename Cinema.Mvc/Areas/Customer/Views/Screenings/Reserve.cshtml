@model ScreeningDetailsDto

@{
    ViewData["Title"] = "Reserve";
    char currentRowLetter = 'A';
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-12">
            <h1 class="text-primary">System rezerwacji miejsc</h1>
        </div>
    </div>
</div>

<!-- Formularz rezerwacji -->
<form id="reservationForm" asp-action="Reserve" method="post">
    <input type="hidden" name="ScreeningId" value="@Model.Id" />
    <input type="hidden" id="selectedSeats" name="SelectedSeats" />

    <div class="container">
        <div class="row ms-2">
            <div class="col-4">
                <dl class="row">
                    <dt class="col-6">
                        <h5>Nazwa filmu:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.MovieTitle</dd>

                    <dt class="col-6">
                        <h5>Nazwa sali:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.CinemaHallName</dd>

                    <dt class="col-6">
                        <h5>Data:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.ScreeningDate.ToString("dd.MM.yyyy")</dd>

                    <dt class="col-6">
                        <h5>Godzina:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.ScreeningTime.ToString("hh\\:mm") - @Model.ScreeningEndTime.ToString("hh\\:mm")</dd>

                    <dt class="col-6">
                        <h5>Wolne miejsca:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.FreeSeats</dd>

                    <dt class="col-6">
                        <h5>Cena normalna:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.RegularTicketPrice PLN</dd>

                    <dt class="col-6">
                        <h5>Cena ulgowa:</h5>
                    </dt>
                    <dd class="col-6 lead">@Model.ReducedTicketPrice PLN</dd>

                    <dt class="col-6 mt-5">
                        <h5>Wolne miejsca:</h5>
                    </dt>
                    <dd class="col-6 mt-5"><div class="seat available"></div></dd>

                    <dt class="col-6">
                        <h5>Zajęte miejsca:</h5>
                    </dt>
                    <dd class="col-6"><div class="seat reserved"></div></dd>
                </dl>
            </div>
            <div class="col-8">
                <div class="cinemaHall">
                    <div class="screen">Ekran</div>
                    @if (Model.TotalSeats == 78)
                    {
                        for (int row = 1; row < 7; row++)
                        {
                            <div class="row">
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                                @for (int seat = 1; seat < 9; seat++)
                                {
                                    var currentSeat = Model.Seats.FirstOrDefault(s => s.RowSign == currentRowLetter && s.SeatNumber == seat);
                                    <label class="seat @(currentSeat.IsReserved ? "reserved" : "available")">
                                        @if (currentSeat.IsReserved)
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" disabled />
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" />
                                        }
                                        @currentSeat.SeatNumber
                                    </label>
                                }
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                            </div>

                            currentRowLetter++;
                        }

                        for (int row = 7; row < 10; row++)
                        {
                            <div class="row">
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                                @for (int seat = 1; seat < 11; seat++)
                                {
                                    var currentSeat = Model.Seats.FirstOrDefault(s => s.RowSign == currentRowLetter && s.SeatNumber == seat);
                                    <label class="seat @(currentSeat.IsReserved ? "reserved" : "available")">
                                        @if (currentSeat.IsReserved)
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" disabled />
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" />
                                        }
                                        @currentSeat.SeatNumber
                                    </label>
                                }
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                            </div>

                            currentRowLetter++;
                        }
                    }
                    else if (Model.TotalSeats == 132)
                    {
                        @for (int row = 1; row < 8; row++)
                        {
                            <div class="row">
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                                @for (int seat = 1; seat < 13; seat++)
                                {
                                    var currentSeat = Model.Seats.FirstOrDefault(s => s.RowSign == currentRowLetter && s.SeatNumber == seat);
                                    <div class="seat @(currentSeat.IsReserved ? "reserved" : "available")">
                                        @if (currentSeat.IsReserved)
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" disabled />
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" />
                                        }
                                        @currentSeat.SeatNumber
                                    </div>

                                }
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                            </div>

                            currentRowLetter++;
                        }

                        @for (int row = 8; row < 11; row++)
                        {
                            <div class="row">
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                                @for (int seat = 1; seat < 17; seat++)
                                {
                                    var currentSeat = Model.Seats.FirstOrDefault(s => s.RowSign == currentRowLetter && s.SeatNumber == seat);
                                    <div class="seat @(currentSeat.IsReserved ? "reserved" : "available")">
                                        @if (currentSeat.IsReserved)
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" disabled />
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="SelectedSeats" class="seat-checkbox" value="@currentSeat.Id" />
                                        }
                                        @currentSeat.SeatNumber
                                    </div>
                                }
                                <div class="row-info">
                                    @currentRowLetter
                                </div>
                            </div>

                            currentRowLetter++;
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Przycisk do zatwierdzenia rezerwacji -->
    <div class="text-center mt-4">
        <button id="reservationButton" type="submit" class="btn btn-primary">Zarezerwuj</button>
    </div>
</form>

<script>
    // Dodaj obsługę kliknięcia dla paneli miejsc
    document.querySelectorAll('.seat').forEach(seat => {
        seat.addEventListener('click', function () {
            // Sprawdź, czy miejsce jest zarezerwowane lub wybrane
            if (!this.classList.contains('reserved')) {
                // Toggle klasy 'selected' dla panelu
                this.classList.toggle('selected');
                // Znajdź zagnieżdżony checkbox i zmień jego stan
                const checkbox = this.querySelector('.seat-checkbox');
                checkbox.checked = !checkbox.checked;
            }
        });
        // Pobierz wszystkie miejsca
        const seats = document.querySelectorAll('.seat');

        // Dodaj obsługę kliknięcia dla paneli miejsc
        seats.forEach(seat => {
            seat.addEventListener('click', function () {
                if (!this.classList.contains('reserved')) {
                    this.classList.toggle('selected');
                    const checkbox = this.querySelector('.seat-checkbox');
                    checkbox.checked = !checkbox.checked;
                    updateSeatsAppearance(); // Aktualizuj wygląd wszystkich miejsc po kliknięciu
                }
            });
        });

        // Aktualizuj wygląd wszystkich miejsc na podstawie ich stanu zaznaczenia
        function updateSeatsAppearance() {
            seats.forEach(seat => {
                const checkbox = seat.querySelector('.seat-checkbox');
                if (checkbox.checked) {
                    seat.classList.add('selected');
                } else {
                    seat.classList.remove('selected');
                }
            });
        }
    });
</script>
